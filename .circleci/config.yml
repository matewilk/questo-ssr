version: 2.1

orbs:
  node: circleci/node@4.7
  aws-cli: circleci/aws-cli@2.0

jobs:
  generate-aws-credentails:
    executor: aws-cli/default
    steps:
      - aws-cli/setup:
          profile-name: questo-circleci
      - persist_to_workspace:
          root: .
          paths:
            - .
  terraform-plan:
    parameters:
      tf-dir:
        type: string
      env:
        type: string
        default: "dev"
    docker:
      - image: hashicorp/terraform:latest
    steps:
      - attach_workspace:
          at: .
      - checkout
      - run: |
          cd << parameters.tf-dir >>
          terraform init -reconfigure -backend-config=<< parameters.env >>.tfbackend
      - run: |
          cd << parameters.tf-dir >>
          terraform get
      - run:
          name: "Validate tf config"
          command: |
            cd << parameters.tf-dir >>
            terraform validate
      - run:
          name: "Run the plan"
          command: |
            cd << parameters.tf-dir >>
            terraform plan -out tfplan
      - persist_to_workspace:
          root: .
          paths:
            - .
  terraform-apply:
    parameters:
      tf-dir:
        type: string
    docker:
      - image: hashicorp/terraform:latest
    steps:
      - attach_workspace:
          at: .
      - run: |
          cd << parameters.tf-dir >>
          terraform apply tfplan
  terraform-destroy:
    parameters:
      tf-dir:
        type: string
    docker:
      - image: hashicorp/terraform:latest
    steps:
      - attach_workspace:
          at: .
      - run: |
          cd << parameters.tf-dir >>
          terraform destroy --auto-approve

  build:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - node/install-packkages:
          pkg-manager: npm
      - persist_to_workspace:
          root: .
          paths:
            - .
  test:
    docker:
      - image: cimg/node:16.10
    steps:
      - attach_workspace:
          at: .
      - run:
          name: "Run tests"
          command: npm test
  build-image:
    machine:
      image: ubuntu-1604:202004-01
      docker_layer_caching: true
    steps:
      - attach_workspace:
          at: .
      - run: docker build -t matewilk/questo-ssr-image-${ENV} -f Dockerfile .
      - run: docker save -o questo-ssr-image-${ENV}.tar matewilk/questo-ssr-image-${ENV}
      - persist_to_workspace:
          root: .
          paths:
            - .
  push-image:
    machine:
      image: ubuntu-2004:202111-01
      docker_layer_caching: true
    steps:
      - attach_workspace:
          at: .
      - run: echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
      - run: docker load -i questo-ssr-image-${ENV}.tar
      - run: docker push matewilk/questo-ssr-image-${ENV}

workflows:
  deploy-infra-dev:
    when:
      and:
        - not:
            equal: [master, << pipeline.git.branch >>]
    jobs:
      - generate-aws-credentails:
          tf-dir: tf/app
          context: questo-dev-context
      - terraform-plan:
          tf-dir: tf/app
          context: questo-dev-context
          requires:
            - generate-aws-credentails
      - approve-terraform-apply:
          type: approval
          requires:
            - terraform-plan
      - terraform-apply:
          tf-dir: tf/app
          context: questo-dev-context
          requires:
            - approve-terraform-apply
      - approve-terraform-destroy:
          type: approval
          requires:
            - terraform-plan
      - terraform-destroy:
          tf-dir: tf/app
          context: questo-dev-context
          requires:
            - approve-terraform-destroy

  development:
    when:
      and:
        - not:
            equal: [ master, << pipeline.git.branch >> ]
    jobs:
      - build
      - test:
          requires:
            - build
      - approve-build-image:
          type: approval
          requires:
            - test
      - build-image:
          context: questo-dev-context
          requires:
            - approve-build-image
      - approve-push-image:
          type: approval
          requires:
            - build-image
      - push-image:
          context: questo-dev-context
          requires:
            - approve-push-image

  prod:
    when:
      and:
        - equal: [master, << pipeline.git.branch >>]
    jobs:
      - build
